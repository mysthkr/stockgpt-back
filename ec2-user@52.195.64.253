# OpenAI.configure do |config|
#     config.access_token = ENV.fetch("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")
# end

OPENAI_API_KEY=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
COMPANY=diveintocode

DB_HOST=db
DB_USERNAME=postgres
DB_PASSWORD=password


# https://753323266388.signin.aws.amazon.com/console
# admin
# IQpL0!$z


# User Name	Access Key Id	Secret Access Key
# admin	AKIA26ZMQ2FKDMILD4HV	hcdPrd34q9B95FB8qtIRvzM3SHdBz8FOmlTUFTAl


# AWS CLI および Docker 向けの最新バージョンがインストールされていることを確認します。詳細については、Amazon ECR の開始方法  を参照してください。
# 次の手順を使用して、リポジトリに対してイメージを認証し、プッシュします。Amazon ECR 認証情報ヘルパーなどの追加のレジストリ認証方法については、レジストリの認証  を参照してください 。
# 認証トークンを取得し、レジストリに対して Docker クライアントを認証します。
# AWS CLI を使用する

# aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 753323266388.dkr.ecr.us-east-1.amazonaws.com
# 注意: AWS CLI の使用中にエラーが発生した場合は、最新バージョンの AWS CLI と Docker がインストールされていることを確認してください。
# 以下のコマンドを使用して、Docker イメージを構築します。一から Docker ファイルを構築する方法については、「こちらをクリック 」の手順を参照してください。既にイメージが構築されている場合は、このステップをスキップします。

# docker build -t stockgpt-frontend .
# 構築が完了したら、このリポジトリにイメージをプッシュできるように、イメージにタグを付けます。

# docker tag stockgpt-frontend:latest 753323266388.dkr.ecr.us-east-1.amazonaws.com/stockgpt-frontend:latest
# 以下のコマンドを実行して、新しく作成した AWS リポジトリにこのイメージをプッシュします:

# docker push 753323266388.dkr.ecr.us-east-1.amazonaws.com/stockgpt-frontend:latest


# root@user:/home/user/workspace/stock-gpt/front# docker network create stockgpt_default
# e649f2b077a5ecbacce400e796928cb185817688e68eb94b691a7f67b3d8f2ca